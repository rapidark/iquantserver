 main- INFO-[2013-12-03 09:05:33,505]-play.Logger.info(Logger.java:290)-Starting E:\iquant_ext\iquantServer
 main- INFO-[2013-12-03 09:05:39,193]-play.Logger.info(Logger.java:290)-Module redis is available (E:\javaTools\play1\modules\redis-0.3)
 main- INFO-[2013-12-03 09:05:39,193]-play.Logger.info(Logger.java:290)-Module guice is available (E:\javaTools\play1\modules\guice-1.2)
 main- INFO-[2013-12-03 09:05:39,193]-play.Logger.info(Logger.java:290)-Module iquantCommon is available (E:\iquant_ext\iquantServer\..\iquantCommon)
 main- WARN-[2013-12-03 09:05:40,459]-play.Logger.warn(Logger.java:345)-You're running Play! in DEV mode
 main- INFO-[2013-12-03 09:05:40,600]-play.Logger.info(Logger.java:290)-Listening for HTTP on port 9100 (Waiting a first request to start) ...
play-thread-1-DEBUG-[2013-12-03 09:08:04,878]-play.Logger.debug(Logger.java:233)-ignoring method: public volatile job.StrategyYieldSmallPicJob$5.handle(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:04,957]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$3.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:04,957]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$3.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:04,972]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$4.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:04,972]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$4.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:04,988]-play.Logger.debug(Logger.java:233)-ignoring method: public volatile dbutils.AbstractKeyedMutiMapHandler.handle(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:06,582]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.product.impl.ProductService$2.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:06,582]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.product.impl.ProductService$2.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:06,597]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.product.impl.ProductService$1.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:06,597]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.product.impl.ProductService$1.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,410]-play.Logger.debug(Logger.java:233)-ignoring method: public volatile bussiness.strategy.impl.StrategyService$1.handle(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,441]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.strategy.impl.StrategyService$2.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,441]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile bussiness.strategy.impl.StrategyService$2.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,895]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$1.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,895]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$1.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,910]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$2.createRow(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1-DEBUG-[2013-12-03 09:08:07,910]-play.Logger.debug(Logger.java:233)-ignoring method: protected volatile job.StrategyYieldSmallPicJob$2.createKey(java.sql.ResultSet) (local vars numbers differs : 1 != -1)
play-thread-1- INFO-[2013-12-03 09:08:08,567]-play.Logger.info(Logger.java:290)-Connecting to redis with redis://localhost:6379
play-thread-1- INFO-[2013-12-03 09:08:09,035]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
play-thread-1- INFO-[2013-12-03 09:08:09,082]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
play-thread-1- INFO-[2013-12-03 09:08:09,082]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
play-thread-1- INFO-[2013-12-03 09:08:09,098]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
play-thread-1- INFO-[2013-12-03 09:08:09,098]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
play-thread-1- INFO-[2013-12-03 09:08:09,098]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
play-thread-1- INFO-[2013-12-03 09:08:09,098]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:08:09,098]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,473]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,489]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,504]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
play-thread-1- INFO-[2013-12-03 09:08:09,520]-play.Logger.info(Logger.java:290)-Connected to jdbc:mysql://192.168.103.108/qic_db?useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&connectionCollation=utf8_general_ci&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
play-thread-1- INFO-[2013-12-03 09:08:09,536]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
play-thread-1- INFO-[2013-12-03 09:08:09,536]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
play-thread-1- INFO-[2013-12-03 09:08:09,536]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
play-thread-1- INFO-[2013-12-03 09:08:09,536]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
play-thread-1- INFO-[2013-12-03 09:08:09,536]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
play-thread-1- INFO-[2013-12-03 09:08:09,551]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
play-thread-1- INFO-[2013-12-03 09:08:09,551]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:08:09,551]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,551]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,551]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,567]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
play-thread-1- INFO-[2013-12-03 09:08:09,582]-play.Logger.info(Logger.java:290)-Connected to jdbc:mysql://192.168.103.108/qicore?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
play-thread-1- INFO-[2013-12-03 09:08:09,598]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
play-thread-1- INFO-[2013-12-03 09:08:09,598]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
play-thread-1- INFO-[2013-12-03 09:08:09,598]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
play-thread-1- INFO-[2013-12-03 09:08:09,598]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
play-thread-1- INFO-[2013-12-03 09:08:09,598]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
play-thread-1- INFO-[2013-12-03 09:08:09,614]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
play-thread-1- INFO-[2013-12-03 09:08:09,614]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:08:09,614]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,629]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,629]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,629]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,629]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,645]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-Connected to jdbc:mysql://192.168.103.108/gta_data?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:08:09,661]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SHOW VARIABLES WHERE Variable_name ='language' OR Variable_name = 'net_write_timeout' OR Variable_name = 'interactive_timeout' OR Variable_name = 'wait_timeout' OR Variable_name = 'character_set_client' OR Variable_name = 'character_set_connection' OR Variable_name = 'character_set' OR Variable_name = 'character_set_server' OR Variable_name = 'tx_isolation' OR Variable_name = 'transaction_isolation' OR Variable_name = 'character_set_results' OR Variable_name = 'timezone' OR Variable_name = 'time_zone' OR Variable_name = 'system_time_zone' OR Variable_name = 'lower_case_table_names' OR Variable_name = 'max_allowed_packet' OR Variable_name = 'net_buffer_length' OR Variable_name = 'sql_mode' OR Variable_name = 'query_cache_type' OR Variable_name = 'query_cache_size' OR Variable_name = 'init_connect'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==/* mysql-connector-java-5.1.20 ( Revision: tonci.grgin@oracle.com-20111003110438-qfydx066wsbydkbw ) */SELECT @@session.auto_increment_increment
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SHOW COLLATION
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,692]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET NAMES utf8
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET character_set_results = NULL
play-thread-1- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-Connected to jdbc:mysql://192.168.103.108/qsm?useUnicode=yes&characterEncoding=UTF-8&connectionCollation=utf8_general_ci&zeroDateTimeBehavior=convertToNull&statementInterceptors=com.tom.mysql.ShowSqlStatementInterceptor
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET collation_connection = utf8_general_ci
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SET sql_mode='STRICT_TRANS_TABLES'
com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0- INFO-[2013-12-03 09:08:09,707]-play.Logger.info(Logger.java:290)-sql==SELECT @@session.tx_isolation
play-thread-1- INFO-[2013-12-03 09:08:10,145]-org.hibernate.annotations.common.Version.<clinit>(Version.java:37)-HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
play-thread-1- INFO-[2013-12-03 09:08:10,161]-org.hibernate.Version.logVersion(Version.java:41)-HHH000412: Hibernate Core {4.1.3.Final}
play-thread-1- INFO-[2013-12-03 09:08:10,161]-org.hibernate.cfg.Environment.<clinit>(Environment.java:239)-HHH000206: hibernate.properties not found
play-thread-1- INFO-[2013-12-03 09:08:10,161]-org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342)-HHH000021: Bytecode provider name : javassist
play-thread-1- INFO-[2013-12-03 09:08:10,536]-org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188)-HHH000130: Instantiating explicit connection provider: org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl
play-thread-1- INFO-[2013-12-03 09:08:10,645]-org.hibernate.dialect.Dialect.<init>(Dialect.java:122)-HHH000400: Using dialect: play.db.jpa.MySQLDialect
play-thread-1- INFO-[2013-12-03 09:08:10,661]-org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:120)-HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
play-thread-1- INFO-[2013-12-03 09:08:10,676]-org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68)-HHH000399: Using default transaction strategy (direct JDBC transactions)
play-thread-1- INFO-[2013-12-03 09:08:10,676]-org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48)-HHH000397: Using ASTQueryTranslatorFactory
play-thread-1-DEBUG-[2013-12-03 09:08:11,270]-play.Logger.debug(Logger.java:233)-Starting Guice modules scanning
play-thread-1-DEBUG-[2013-12-03 09:08:11,270]-play.Logger.debug(Logger.java:233)-Guice modules cleared
play-thread-1- INFO-[2013-12-03 09:08:11,630]-play.Logger.info(Logger.java:290)-Guice injector created with modules: 
class binding.CommonBindModule
class binding.LicencesBindModule
class binding.ProductBindModule
class binding.StockBindModule
class binding.StrategyBindModule
class binding.TradeAccountBindModule
class binding.UserBindModule

play-thread-1- INFO-[2013-12-03 09:08:11,755]-play.Logger.info(Logger.java:290)-Application 'iquantServer' is now started !
play-thread-1- INFO-[2013-12-03 09:08:11,786]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql]
play-thread-1- INFO-[2013-12-03 09:08:11,802]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql\common]
play-thread-1- INFO-[2013-12-03 09:08:11,958]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql\product]
play-thread-1- INFO-[2013-12-03 09:08:11,974]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql\stock]
play-thread-1- INFO-[2013-12-03 09:08:12,005]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql\strategy]
play-thread-1- INFO-[2013-12-03 09:08:12,036]-play.Logger.info(Logger.java:290)-loading sql from [E:\iquant_ext\iquantServer\conf\sql\user]
play-thread-1- INFO-[2013-12-03 09:08:12,411]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:08:12,474]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id,
        key_name 'key',
        key_value value                     
    FROM
        config_manage
play-thread-1- INFO-[2013-12-03 09:08:12,505]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:08:12,505]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
jobs-thread-3- INFO-[2013-12-03 09:08:12,677]-play.Logger.info(Logger.java:290)-启动zmq...
jobs-thread-3- INFO-[2013-12-03 09:08:12,771]-play.Logger.info(Logger.java:290)-zmp已启动, 在端口55555上侦听
play-thread-1- INFO-[2013-12-03 09:12:41,965]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:12:41,965]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        user_uuid as uuid,
        check_sum as checkSum,
        id,
        `name`,
        account,
        pwd,
        phone,
        email,
        idcard,
        capital_account AS capitalAccount,
        address,
        post,
        sdate,
        edate,
        apply_date AS applyDate,
        `status`,
        utype,
        utime,
        max_login as maxLogin     
    FROM
        user_info     
    WHERE
        account = 'admin' 
        and status <> -100     limit 1
play-thread-1- INFO-[2013-12-03 09:12:42,168]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:12:42,168]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:12:51,967]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:12:51,967]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        user_uuid as uuid,
        check_sum as checkSum,
        id,
        `name`,
        account,
        pwd,
        phone,
        email,
        idcard,
        capital_account AS capitalAccount,
        address,
        post,
        sdate,
        edate,
        apply_date AS applyDate,
        `status`,
        utype,
        utime,
        max_login as maxLogin     
    FROM
        user_info     
    WHERE
        account = 'admin' 
        and status <> -100     limit 1
play-thread-1- INFO-[2013-12-03 09:12:51,982]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:12:51,982]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:12:54,764]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:12:54,764]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:12:54,780]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:12:54,842]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:12:54,842]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:12:54,998]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:12:54,998]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:12:54,998]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:12:55,014]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:12:55,014]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:12:55,139]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:12:55,186]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:12:55,186]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:12:55,202]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:12:55,202]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:14:31,127]-play.Logger.debug(Logger.java:233)-收到请求数据:
{"saleId":0,"orderFlag":0,"status":0,"flag":1}
play-thread-1- INFO-[2013-12-03 09:14:31,127]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:31,127]-play.Logger.info(Logger.java:290)-sql==
    select
        count(*) 
    from
        ( SELECT
            ui.`id` AS id,
            ui.`account` AS account,
            ui.`name` AS NAME,
            ui.`idcard` AS idCard,
            ui.`phone` AS phone,
            sd.`name` AS saleName,
            ui.`capital_account` AS capitalAccount,
            ui.`apply_date` AS applyDate,
            ui.`status` AS STATUS 
        FROM
            user_info ui   
        LEFT JOIN
            sale_department sd     
                ON ui.`sale_dep` = sd.`id`  
        WHERE
            ui.`status`=2 ) distTable
play-thread-1- INFO-[2013-12-03 09:14:31,143]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:31,143]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:14:31,174]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:31,174]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id,
        name              
    FROM
        sale_department
play-thread-1- INFO-[2013-12-03 09:14:31,174]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:31,174]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:14:31,221]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:31,221]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id,
        name                 
    FROM
        role_info
play-thread-1- INFO-[2013-12-03 09:14:31,236]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:31,236]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:14:41,426]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:41,426]-play.Logger.info(Logger.java:290)-sql==
    select
        count(*) 
    from
        ( SELECT
            a.`id` AS id,
            a.`message` AS msg,
            a.`messge_time` AS msgTime,
            a.`status` AS STATUS,
            a.`title` AS title             
        FROM
            qic_db.`user_message` a             
        WHERE
            a.`uid` = 1 ) distTable
play-thread-1- INFO-[2013-12-03 09:14:41,441]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        a.`id` AS id,
        a.`message` AS msg,
        a.`messge_time` AS msgTime,
        a.`status` AS STATUS,
        a.`title` AS title             
    FROM
        qic_db.`user_message` a             
    WHERE
        a.`uid` = 1 
    order by
        msgTime asc  limit 0,
        20
play-thread-1- INFO-[2013-12-03 09:14:41,441]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:41,441]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:14:49,568]-play.Logger.debug(Logger.java:233)-收到请求数据:
{
  "uid": "1",
  "tradeType": "0",
  "status": "-1",
  "orderType": "0",
  "pageNo": "1",
  "keyword": "",
  "orderCol": "1",
  "tradeVariety": "0",
  "strategyLanguage": "0"
}
play-thread-1- INFO-[2013-12-03 09:14:49,599]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:49,599]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        COUNT(1) 
    FROM
        ( SELECT
            uso.validCount                         
        FROM
            strategy_baseinfo sb                         
        LEFT JOIN
            (
                SELECT
                    count(1) validCount,
                    stid                                 
                from
                    user_strategy_order                                 
                where
                    UNIX_TIMESTAMP(order_etime)>UNIX_TIMESTAMP(now())                                 
                group by
                    stid                               
            ) uso                         
                ON                                uso.stid=sb.id                         
        WHERE
            sb.stup_uid=1 
        ) tmp
play-thread-1- INFO-[2013-12-03 09:14:49,599]-play.Logger.info(Logger.java:290)-sql==SELECT
                 name sname,
                 provider,
                 status,
                 order_count orderCount,
                 collect_count collectCount,
                 up_time upTime,
                 down_time downTime,
                 pass_time passTime,
                 upload_time uploadTime,
                 uso.validCount validOrderCount,
                 sb.trade_variety tradeVariety,
                 sb.enginetype_id enginetypeId,
                 sb.trade_type stype
            FROM
                strategy_baseinfo sb
            LEFT JOIN
                 (
                   SELECT
                          count(1) validCount,
                          stid

                    from
                           user_strategy_order
                    where
                          UNIX_TIMESTAMP(order_etime)>UNIX_TIMESTAMP(now())
                    group by
                          stid

                 ) uso
            ON
                   uso.stid=sb.id
            WHERE
                   sb.stup_uid=1 order by sb.name ASC 
 limit 0,20
play-thread-1- INFO-[2013-12-03 09:14:49,615]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:49,615]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:14:49,662]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:49,662]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id,
        `name`,
        account,
        pwd,
        phone,
        email,
        idcard,
        capital_account AS capitalAccount,
        address,
        post,
        sdate,
        edate,
        apply_date AS applyDate,
        `status`,
        utype,
        utime,
        max_login as maxLogin 
    FROM
        user_info 
    WHERE
        id = 1 limit 1
play-thread-1- INFO-[2013-12-03 09:14:49,662]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:49,662]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:14:57,398]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:57,398]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:14:57,413]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:14:57,429]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:57,429]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:14:57,523]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:14:57,523]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:57,523]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:14:57,523]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:57,523]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:14:57,617]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:14:57,617]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:14:57,617]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:14:57,617]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:14:57,632]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:18:39,254]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:18:39,254]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:18:39,285]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:18:39,301]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:18:39,301]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:18:39,379]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:18:39,379]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:18:39,379]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:18:39,379]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:18:39,379]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:18:39,489]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:18:39,489]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:18:39,489]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:18:39,489]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:18:39,489]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:19:33,171]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:19:33,171]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        user_uuid as uuid,
        check_sum as checkSum,
        id,
        `name`,
        account,
        pwd,
        phone,
        email,
        idcard,
        capital_account AS capitalAccount,
        address,
        post,
        sdate,
        edate,
        apply_date AS applyDate,
        `status`,
        utype,
        utime,
        max_login as maxLogin     
    FROM
        user_info     
    WHERE
        account = 'admin' 
        and status <> -100     limit 1
play-thread-1- INFO-[2013-12-03 09:19:33,171]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:19:33,171]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:19:49,299]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:19:49,299]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        user_uuid as uuid,
        check_sum as checkSum,
        id,
        `name`,
        account,
        pwd,
        phone,
        email,
        idcard,
        capital_account AS capitalAccount,
        address,
        post,
        sdate,
        edate,
        apply_date AS applyDate,
        `status`,
        utype,
        utime,
        max_login as maxLogin     
    FROM
        user_info     
    WHERE
        account = 'admin' 
        and status <> -100     limit 1
play-thread-1- INFO-[2013-12-03 09:19:49,299]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:19:49,299]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:19:52,159]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:19:52,159]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:19:52,175]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:19:52,191]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:19:52,206]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:19:52,300]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:19:52,300]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:19:52,300]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:19:52,300]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:19:52,300]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:19:52,456]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:19:52,456]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:19:52,456]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:19:52,503]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:19:52,503]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:21:50,089]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:21:50,089]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:21:50,105]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:21:50,120]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:21:50,120]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:21:50,214]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:21:50,214]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:21:50,214]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:21:50,214]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:21:50,230]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:21:50,355]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:21:50,355]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:21:50,355]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:21:50,370]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:21:50,370]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:22:57,259]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:22:57,259]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:22:57,259]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:22:57,274]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:22:57,274]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:22:57,368]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:22:57,368]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:22:57,368]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:22:57,368]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:22:57,368]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:22:57,462]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:22:57,462]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:22:57,462]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:22:57,477]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:22:57,477]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1- INFO-[2013-12-03 09:23:32,109]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:23:32,109]-play.Logger.info(Logger.java:290)-sql==select count(*) from (
SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC 
) distTable where 1=1
play-thread-1- INFO-[2013-12-03 09:23:32,125]-play.Logger.info(Logger.java:290)-sql==SELECT
    sb.id AS id,
    sb.st_uuid AS 'uuid',
    sb.name AS sname,
    sb.provider AS provider, /*提供者*/
    sb.trade_type AS stype, /*交易类型*/
    sb.trade_variety AS tradeVariety,/*交易品种*/
    sb.collect_count AS collectCount,/*收藏总数*/
    sb.up_time AS upTime,/*上架时间*/
    sb.discuss_count AS discussCount,/*评论总数*/
    sb.enginetype_id AS enginetypeId,/*引擎类型*/
    sb.desp AS desp, /*简介*/
    sb.order_count AS orderCount,/*总订阅人数*/

    IF(
        sb.discuss_count = 0,
        0,
        sb.discuss_total / sb.discuss_count
    ) AS starLevel, /*星级*/

    IF(
        sb.enginetype_id = 1,
        qicore.yield_of_year,
        qia.average_simple_rate_of_return * 252
    ) AS yield, /*年化收益率*/

    IF(
        sb.enginetype_id = 1,
        qicore.profit_ratio,
        qia.hit_rate
    ) AS profitRatio, /*胜率*/

    IF(
        sb.enginetype_id = 1,
        qicore.sharpe_index,
        qia.sharp_ratio
    ) AS sharpe /*夏普比率*/

FROM
    qic_db.strategy_baseinfo sb
    LEFT JOIN
    (
    SELECT a.*
    FROM qic_db.strategy_performance_qicore a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qicore b
        GROUP BY b.strategy_id
    ) spe
    WHERE a.strategy_id = spe.strategy_id AND a.update_time = spe.update_time
    ) AS qicore
        ON sb.id = qicore.strategy_id
    LEFT JOIN (
    SELECT a.*
    FROM qic_db.strategy_performance_qia a ,
    (
        SELECT b.strategy_id, MAX(b.update_time) AS update_time
        FROM qic_db.strategy_performance_qia b
        GROUP BY b.strategy_id
    ) bm
    WHERE a.strategy_id = bm.strategy_id AND a.update_time = bm.update_time
    ) AS qia
        ON sb.id = qia.strategy_id
WHERE sb.status IN (4, 7) AND sb.up_time < DATE_ADD(NOW(), INTERVAL - 3 DAY)  ORDER BY yield DESC  limit 0,20
play-thread-1- INFO-[2013-12-03 09:23:32,156]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:23:32,172]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:23:32,250]-play.Logger.debug(Logger.java:233)-SELECT uid AS uid,stid AS stid FROM qic_db.user_strategy_collect WHERE uid=1 AND stid in (10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160)
play-thread-1- INFO-[2013-12-03 09:23:32,250]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:23:32,250]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        uid AS uid,
        stid AS stid 
    FROM
        qic_db.user_strategy_collect 
    WHERE
        uid=1 
        AND stid in (
            10193,10148,10228,10229,10211,10215,10191,10216,10219,10156,10196,10158,10225,10198,10161,10151,10153,10157,10197,10160
        )
play-thread-1- INFO-[2013-12-03 09:23:32,250]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:23:32,250]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
play-thread-1-DEBUG-[2013-12-03 09:23:32,344]-play.Logger.debug(Logger.java:233)-从模板生成的sql:
SELECT
                       id id,
                       uid uid,
                       type  type,
                       name name,
                       content content
                    FROM
                       user_template
                    WHERE
                       uid=:uid and type=:type
play-thread-1- INFO-[2013-12-03 09:23:32,344]-play.Logger.info(Logger.java:290)-sql==SET autocommit=0
play-thread-1- INFO-[2013-12-03 09:23:32,359]-play.Logger.info(Logger.java:290)-sql==
    SELECT
        id id,
        uid uid,
        type  type,
        name name,
        content content                     
    FROM
        user_template                     
    WHERE
        uid=1 
        and type=1
play-thread-1- INFO-[2013-12-03 09:23:32,359]-play.Logger.info(Logger.java:290)-sql==commit
play-thread-1- INFO-[2013-12-03 09:23:32,359]-play.Logger.info(Logger.java:290)-sql==SET autocommit=1
